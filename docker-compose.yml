version: "3.9"
services:
  db:
    image: postgres:16
    container_name: inmo_pg
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: inmo_assistant
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.2
    container_name: inmo_redis
    ports: ["6379:6379"]
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    build:
      context: ./inmo-assistant-api
      dockerfile: Dockerfile
    env_file:
      - ./inmo-assistant-api/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://127.0.0.1:3000/health').then(r=>{if(r.ok){process.exit(0);}process.exit(1);}).catch(()=>process.exit(1));",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  worker:
    build:
      context: ./inmo-assistant-api
      dockerfile: Dockerfile
    command: ["node", "dist/queues/outbox.worker.js"]
    env_file:
      - ./inmo-assistant-api/.env
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "pgrep node >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  pgdata:
